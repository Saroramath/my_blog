{"version":3,"sources":["webpack:///./src/components/article.module.css","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/article.js","webpack:///./src/pages/index.js","webpack:///./node_modules/lodash/kebabcase.js","webpack:///./src/pages/index.module.css","webpack:///./src/components/seo.js"],"names":["module","exports","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","className","marginTop","Date","getFullYear","href","Post","styled","article","Title","h2","Initiale","span","Excerpt","p","Article","date","excerpt","slug","timeToRead","category","firstChar","charAt","Subline","kebabCase","IndexQuery","IndexPage","keywords","styles","indexContent","hero","allMarkdownRemark","edges","map","post","node","frontmatter","fields","key","createCompounder","result","word","index","toLowerCase","SEO","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-index-js-6040fbfb07149aa8cc7c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"article-module--post--3geCi\",\"initiale\":\"article-module--initiale--25f5Q\",\"title\":\"article-module--title--2aaH5\",\"date\":\"article-module--date--A0OoP\",\"excerpt\":\"article-module--excerpt--1UuKi\"};","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'green',\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\n//import Helmet from 'react-helmet';\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n//import theme from '../../config/Theme';\n//import styled, { ThemeProvider, injectGlobal } from 'styled-components';\n\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\n\n\n const Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main className = 'layout'>{children}</main>\n        <footer style={{\n          marginTop: `2rem`\n        }}>\n          Â© {new Date().getFullYear()}, Built by a tree with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n} \n\n\n\n\n\n\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabcase';\n\n\nimport styled from 'styled-components';\n\nimport styles from './article.module.css';\n\n/* const Article = ({ title, date, excerpt, slug }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <article className={styles.post}>\n      <h2 className={styles.title}>\n        <span className={styles.initiale}>{firstChar}</span>\n        <Link to={slug}>{title}</Link>\n      </h2>\n      <h4 className={styles.date}>{date}</h4>\n      <p className={styles.excerpt}>{excerpt}</p>\n    </article>\n  );\n};\n\nexport default Article;\n */\n\n//new code start here\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\n//new code ends here\n\n\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n}","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport styles from './index.module.css';\nimport Article from '../components/article';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div className={styles.indexContent}>\n      <div className={styles.hero}>\n        <h1>Hi.</h1>\n        <p>\n          I&apos;m Shivam Arora, a Senior UX Developer with zero years of industry\n          experience, specializing in developing pancakes with the best UX\n          users can get.\n        </p>\n      </div>\n      {data.allMarkdownRemark.edges.map(post => (\n        <Article\n          title={post.node.frontmatter.title}\n          date={post.node.frontmatter.date}\n          excerpt={post.node.excerpt}\n          slug={post.node.fields.slug}\n          key={post.node.fields.slug}\n        />\n      ))}\n    </div>\n  </Layout>\n);\n\nexport default IndexPage;\n\nexport const IndexQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n          }\n          excerpt(pruneLength: 200)\n        }\n      }\n    }\n  }\n`;","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indexContent\":\"index-module--indexContent--1Ll7Q\",\"hero\":\"index-module--hero--2Osae\"};","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}