{"version":3,"sources":["webpack:///./src/components/article.module.css","webpack:///./src/components/Subline.js","webpack:///./src/components/Article.js","webpack:///./src/templates/category.js"],"names":["module","exports","Line","styled","div","props","theme","fontSmall","light","sectionTitle","Subline","children","Article","title","date","excerpt","slug","firstChar","charAt","className","styles","post","initiale","to","Content","bg","media","tablet","phone","postQuery","Category","category","pathContext","data","allMarkdownRemark","edges","totalCount","subline","Wrapper","Helmet","Header","SectionTitle","map","node","frontmatter","timeToRead","fields","key"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,SAAW,kCAAkC,MAAQ,+BAA+B,KAAO,8BAA8B,QAAU,mC,iLCEpLC,EAAOC,IAAOC,IAAV,oEAAGD,CAAH,0CACK,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,aACzB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,SAC5B,SAAAH,GAAK,OAAIA,EAAMI,cAAgB,uBAC/B,SAAAJ,GAAK,OAAIA,EAAMI,cAAgB,yBAC/B,SAAAJ,GAAK,OAAIA,EAAMI,cAAgB,wBAKpBC,EAFC,SAAAL,GAAK,OAAI,kBAACH,EAAD,CAAMO,aAAcJ,EAAMI,cAAeJ,EAAMM,W,iCCUzDC,EAfC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KACjCC,EAAYJ,EAAMK,OAAO,GAE/B,OACE,6BAASC,UAAWC,IAAOC,MACzB,wBAAIF,UAAWC,IAAOP,OACpB,0BAAMM,UAAWC,IAAOE,UAAWL,GACnC,kBAAC,OAAD,CAAMM,GAAIP,GAAOH,IAEnB,wBAAIM,UAAWC,IAAON,MAAOA,GAC7B,uBAAGK,UAAWC,IAAOL,SAAUA,K,wBCL/BS,EAAUrB,IAAOC,IAAV,oEAAGD,CAAH,iNAKS,SAAAE,GAAK,OAAIA,EAAMC,MAAMmB,KAGhCC,IAAMC,OAGND,IAAME,OAwCJC,GAHEC,UAhCE,SAAAzB,GAAU,IACjB0B,EAAa1B,EAAM2B,YAAnBD,SADgB,EAEM1B,EAAM4B,KAAKC,kBAAjCC,EAFgB,EAEhBA,MAAOC,EAFS,EAETA,WACTC,EAAaD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,iBAAoEL,EAApE,IAEb,OACE,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ1B,MAAUkB,EAAL,qCACb,kBAACS,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMjB,GAAG,KAAT,kCAEF,kBAACC,EAAD,KACE,kBAACiB,EAAA,EAAD,mBAAgCV,GAChC,kBAAC,EAAD,CAAStB,cAAY,GAClB4B,EADH,SACiB,kBAAC,IAAD,CAAMd,GAAG,eAAT,kBADjB,KAGCY,EAAMO,KAAI,SAAArB,GAAI,OACb,kBAAC,EAAD,CACER,MAAOQ,EAAKsB,KAAKC,YAAY/B,MAC7BC,KAAMO,EAAKsB,KAAKC,YAAY9B,KAC5BC,QAASM,EAAKsB,KAAK5B,QACnB8B,WAAYxB,EAAKsB,KAAKE,WACtB7B,KAAMK,EAAKsB,KAAKG,OAAO9B,KACvBe,SAAUV,EAAKsB,KAAKC,YAAYb,SAChCgB,IAAK1B,EAAKsB,KAAKG,OAAO9B,aAWZ","file":"component---src-templates-category-js-914db286caa0a7125442.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"article-module--post--3geCi\",\"initiale\":\"article-module--initiale--25f5Q\",\"title\":\"article-module--title--2aaH5\",\"date\":\"article-module--date--A0OoP\",\"excerpt\":\"article-module--excerpt--1UuKi\"};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Line = styled.div`\n  font-size: ${props => props.theme.fontSmall};\n  color: ${props => props.theme.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nconst Subline = props => <Line sectionTitle={props.sectionTitle}>{props.children}</Line>;\n\nexport default Subline","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby';\n\nimport styles from './article.module.css';\n\nconst Article = ({ title, date, excerpt, slug }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <article className={styles.post}>\n      <h2 className={styles.title}>\n        <span className={styles.initiale}>{firstChar}</span>\n        <Link to={slug}>{title}</Link>\n      </h2>\n      <h4 className={styles.date}>{date}</h4>\n      <p className={styles.excerpt}>{excerpt}</p>\n    </article>\n  );\n};\n\nexport default Article;\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n}","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Link from 'gatsby-link';\nimport styled from 'styled-components';\nimport Wrapper from '../components/Wrapper';\nimport Header from '../components/Header';\nimport Subline from '../components/Subline';\nimport Article from '../components/Article';\nimport SectionTitle from '../components/SectionTitle';\nimport { media } from '../utils/media';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Category = props => {\n  const { category } = props.pathContext;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const subline = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${category}\"`;\n\n  return (\n    <Wrapper>\n      <Helmet title={`${category} | Gatsby Starter - Minimal Blog`} />\n      <Header>\n        <Link to=\"/\">Gatsby Starter - Minimal Blog</Link>\n      </Header>\n      <Content>\n        <SectionTitle>Category &ndash; {category}</SectionTitle>\n        <Subline sectionTitle>\n          {subline} (See <Link to=\"/categories\">all categories</Link>)\n        </Subline>\n        {edges.map(post => (\n          <Article\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            slug={post.node.fields.slug}\n            category={post.node.frontmatter.category}\n            key={post.node.fields.slug}\n          />\n        ))}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Category;\n\n/* eslint no-undef: off */\nexport const postQuery = graphql`\n  query CategoryPage($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}