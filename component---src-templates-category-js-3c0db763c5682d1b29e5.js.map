{"version":3,"sources":["webpack:///./src/components/article.module.css","webpack:///./src/components/SectionTitle.js","webpack:///./src/components/Subline.js","webpack:///./src/components/Article.js","webpack:///./src/templates/category.js","webpack:///./src/components/Wrapper.js","webpack:///./src/utils/media.js","webpack:///./node_modules/lodash/kebabcase.js","webpack:///./src/components/Header.js"],"names":["module","exports","Title","styled","div","props","theme","fontSmall","dark","ultraLight","SectionTitle","children","Line","light","sectionTitle","Subline","Post","article","h2","Initiale","span","Excerpt","p","Article","title","date","excerpt","slug","timeToRead","category","firstChar","charAt","to","kebabCase","Content","bg","media","tablet","phone","postQuery","Category","pathContext","data","allMarkdownRemark","edges","totalCount","subline","Wrapper","Helmet","Header","map","post","node","frontmatter","fields","key","Grid","createCompounder","result","word","index","toLowerCase","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps"],"mappings":"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","file":"component---src-templates-category-js-3c0db763c5682d1b29e5.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"article-module--post--3geCi\",\"initiale\":\"article-module--initiale--25f5Q\",\"title\":\"article-module--title--2aaH5\",\"date\":\"article-module--date--A0OoP\",\"excerpt\":\"article-module--excerpt--1UuKi\"};","import React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  font-size: ${props => props.theme.fontSmall};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.ultraLight};\n  }\n`;\n\nconst SectionTitle = props => <Title>{props.children}</Title>;\n\nexport default SectionTitle;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Line = styled.div`\n  font-size: ${props => props.theme.fontSmall};\n  color: ${props => props.theme.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nconst Subline = props => <Line sectionTitle={props.sectionTitle}>{props.children}</Line>;\n\nexport default Subline","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabcase';\n\nimport Subline from './Subline';\n\nimport styled from 'styled-components';\n\nimport styles from './article.module.css';\n\n/* const Article = ({ title, date, excerpt, slug }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <article className={styles.post}>\n      <h2 className={styles.title}>\n        <span className={styles.initiale}>{firstChar}</span>\n        <Link to={slug}>{title}</Link>\n      </h2>\n      <h4 className={styles.date}>{date}</h4>\n      <p className={styles.excerpt}>{excerpt}</p>\n    </article>\n  );\n};\n\nexport default Article;\n */\n\n//new code start here\nconst Post = styled.article`\n  display: flex;\n  flex-direction: column;\n  margin-top: 3.5rem;\n  margin-bottom: 3.5rem;\n`;\n\nconst Title = styled.h2`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Initiale = styled.span`\n  position: absolute;\n  font-size: 7rem;\n  transform: translate(-50%, -50%);\n  opacity: 0.08;\n  user-select: none;\n  z-index: -1;\n`;\n\nconst Excerpt = styled.p`\n  grid-column: -1 / 1;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Article = ({ title, date, excerpt, slug, timeToRead, category }) => {\n  const firstChar = title.charAt(0);\n\n  return (\n    <Post>\n      <Title>\n        <Initiale>{firstChar}</Initiale>\n        <Link to={slug}>{title}</Link>\n      </Title>\n      <Subline>\n        {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n        <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n      </Subline>\n      <Excerpt>{excerpt}</Excerpt>\n    </Post>\n  );\n};\n\nexport default Article;\n\n//new code ends here\n\n\n\nArticle.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  excerpt: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n}","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Link from 'gatsby-link';\nimport styled from 'styled-components';\nimport Wrapper from '../components/Wrapper';\nimport Header from '../components/Header';\nimport Subline from '../components/Subline';\nimport Article from '../components/Article';\nimport SectionTitle from '../components/SectionTitle';\nimport { media } from '../utils/media';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Category = props => {\n  const { category } = props.pathContext;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const subline = `${totalCount} post${totalCount === 1 ? '' : 's'} tagged with \"${category}\"`;\n\n  return (\n    <Wrapper>\n      <Helmet title={`${category} | Gatsby Starter - Minimal Blog`} />\n      <Header>\n        <Link to=\"/\">Gatsby Starter - Minimal Blog</Link>\n      </Header>\n      <Content>\n        <SectionTitle>Category &ndash; {category}</SectionTitle>\n        <Subline sectionTitle>\n          {subline} (See <Link to=\"/categories\">all categories</Link>)\n        </Subline>\n        {edges.map(post => (\n          <Article\n            title={post.node.frontmatter.title}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            timeToRead={post.node.timeToRead}\n            slug={post.node.fields.slug}\n            category={post.node.frontmatter.category}\n            key={post.node.fields.slug}\n          />\n        ))}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Category;\n\n/* eslint no-undef: off */\nexport const postQuery = graphql`\n  query CategoryPage($category: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD.MM.YYYY\")\n            category\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nconst Wrapper = props => <Grid>{props.children}</Grid>;\n\nexport default Wrapper;","const sizes = {\n    tablet: '1200px',\n    phone: '600px',\n  };\n  \n  export const media = {\n    tablet: `(max-width: ${sizes.tablet})`,\n    phone: `(max-width: ${sizes.phone})`,\n  };","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'green',\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n"],"sourceRoot":""}