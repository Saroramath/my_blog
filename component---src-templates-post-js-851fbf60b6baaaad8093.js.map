{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack:///./src/templates/post.js","webpack:///./src/templates/post.module.css","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Subline.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/components/Wrapper.js","webpack:///./src/utils/media.js","webpack:///./src/components/Header.js","webpack:///./src/components/seo.js"],"names":["_taggedTemplateLiteralLoose","strings","raw","slice","Content","styled","article","props","theme","bg","media","tablet","phone","Title","h1","PostContent","div","postQuery","Post","slug","pageContext","postNode","data","markdownRemark","post","frontmatter","Wrapper","postPath","postSEO","Helmet","title","Header","to","config","siteTitle","Subline","date","timeToRead","kebabCase","category","dangerouslySetInnerHTML","__html","html","module","exports","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","children","useStaticQuery","site","siteMetadata","className","marginTop","Date","getFullYear","href","Line","fontSmall","light","sectionTitle","createCompounder","result","word","index","toLowerCase","Grid","SEO","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-templates-post-js-851fbf60b6baaaad8093.js","sourcesContent":["export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout'\nimport styles from './post.module.css';\nimport SEO from '../components/seo';\nimport kebabCase from 'lodash/kebabCase';\nimport '../utils/prismjs-theme.css';\nimport Wrapper from '../components/Wrapper';\nimport Header from '../components/Header';\nimport Subline from '../components/Subline';\nimport { media } from '../utils/media';/* \n\n\n\n\n\n\n\nconst Post = props => {\n  const postNode = props.data.markdownRemark;\n  const post = postNode.frontmatter;\n\n  return (\n    <Layout>\n      <SEO title={`${post.title}`} />\n      <article className={styles.blogPost}>\n        <Link to=\"/\">\n          Gatsby Starter - Minimal Blog | Get back to the overview\n        </Link>\n        <Link to={`/categories/${kebabCase(post.category)}`}>{post.category}</Link>\n        <h1 className={styles.title}>{post.title}</h1>\n        <h4 className={styles.date}>{post.date}</h4>\n        <div\n          className={styles.content}\n          dangerouslySetInnerHTML={{ __html: postNode.html }}\n        />\n      </article>\n    </Layout>\n  );\n};\n\nexport default Post; */\n\n\n//new code start here\nconst Content = styled.article`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 1rem;\n`;\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\nconst Post = props => {\n  const { slug } = props.pageContext;\n  const postNode = props.data.markdownRemark;\n  const post = postNode.frontmatter;\n\n\n  return (\n    <Layout>\n      <Wrapper>\n        <SEO postPath={slug} postNode={postNode} postSEO />\n        <Helmet title={`${post.title}`} />\n        <Header>\n          <Link to=\"/\">{config.siteTitle}</Link>\n        </Header>\n        <Content>\n          <Title>{post.title}</Title>\n          <Subline>\n            {post.date} &mdash; {postNode.timeToRead} Min Read &mdash; In{' '}\n            <Link to={`/categories/${kebabCase(post.category)}`}>{post.category}</Link>\n          </Subline>\n          <PostContent dangerouslySetInnerHTML={{ __html: postNode.html }} />\n        </Content>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Post;\n\n\n\n// newcode ends here\n\nexport const postQuery = graphql`\n  query postBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        category\n      }\n    }\n  }\n`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogPost\":\"post-module--blogPost--Wg4nK\",\"title\":\"post-module--title--_4a8P\",\"content\":\"post-module--content--2Opks\"};","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'green',\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\n//import Helmet from 'react-helmet';\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n//import theme from '../../config/Theme';\n//import styled, { ThemeProvider, injectGlobal } from 'styled-components';\n\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\n\n\n const Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main className = 'layout'>{children}</main>\n        <footer style={{\n          marginTop: `2rem`\n        }}>\n          Â© {new Date().getFullYear()}, Built by a tree with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n} \n\n\n\n\n\n\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Line = styled.div`\n  font-size: ${props => props.theme.fontSmall};\n  color: ${props => props.theme.light};\n  ${props => props.sectionTitle && 'margin-top: -3rem'};\n  ${props => props.sectionTitle && 'margin-bottom: 4rem'};\n  ${props => props.sectionTitle && 'text-align: center'};\n`;\n\nconst Subline = props => <Line sectionTitle={props.sectionTitle}>{props.children}</Line>;\n\nexport default Subline","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nconst Wrapper = props => <Grid>{props.children}</Grid>;\n\nexport default Wrapper;","const sizes = {\n    tablet: '1200px',\n    phone: '600px',\n  };\n  \n  export const media = {\n    tablet: `(max-width: ${sizes.tablet})`,\n    phone: `(max-width: ${sizes.phone})`,\n  };","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'green',\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.author || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}