{"version":3,"sources":["webpack:///./src/components/SectionTitle.js","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./src/pages/categories.js","webpack:///./src/components/Wrapper.js","webpack:///./src/utils/media.js","webpack:///./src/components/Header.js"],"names":["Title","styled","div","props","theme","fontSmall","dark","ultraLight","SectionTitle","children","kebabCase","createCompounder","result","word","index","toLowerCase","module","exports","Content","bg","media","tablet","phone","h3","Category","group","data","allMarkdownRemark","title","to","map","category","fieldValue","totalCount","postQuery","Grid","Wrapper","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps"],"mappings":"2FAAA,yBAGMA,EAHN,UAGcC,EAAOC,IAAV,sEAAGD,CAAH,kQACI,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,aAIzB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,QAYd,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,cAMxBC,IAFM,SAAAL,GAAK,OAAI,kBAACH,EAAD,KAAQG,EAAMM,Y,qBCxB5C,IAuBIC,EAvBmB,EAAQ,OAuBfC,EAAiB,SAASC,EAAQC,EAAMC,GACtD,OAAOF,GAAUE,EAAQ,IAAM,IAAMD,EAAKE,iBAG5CC,EAAOC,QAAUP,G,kCC3BjB,4LAUMQ,EAAUjB,IAAOC,IAAV,sEAAGD,CAAH,iNAKS,SAAAE,GAAK,OAAIA,EAAMC,MAAMe,KAGhCC,IAAMC,OAGND,IAAME,OAKXtB,EAAQC,IAAOsB,GAAV,oEAAGtB,CAAH,uFA6BIuB,UAvBE,SAAArB,GAAU,IACjBsB,EAAUtB,EAAMuB,KAAKC,kBAArBF,MAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQG,MAAM,+CACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,kCAEF,kBAACX,EAAD,KACE,kBAAC,IAAD,mBACCO,EAAMK,KAAI,SAAAC,GAAQ,OACjB,kBAAC/B,EAAD,KACE,kBAAC,IAAD,CAAM6B,GAAE,eAAiBnB,IAAUqB,EAASC,aAAgBD,EAASC,YADvE,KAEID,EAASE,WAFb,WAcH,IAAMC,EAAS,c,kCC1DtB,yBAGMC,EAHN,UAGalC,EAAOC,IAAV,mEAAGD,CAAH,qFAQKmC,IAFC,SAAAjC,GAAK,OAAI,kBAACgC,EAAD,KAAOhC,EAAMM,Y,kCCTtC,sCAKeW,EAAQ,CACnBC,OAAO,eALC,SAKF,IACNC,MAAM,eALC,QAKF,M,kCCPT,qCAIMe,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAY,QACZC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEb,GAAG,IACHU,MAAO,CACLM,MAAM,QACNC,eAAe,SAGhBR,OAWXD,EAAOU,aAAe,CACpBT,UAAU,IAGGD","file":"component---src-pages-categories-js-9d440de890812bca23a1.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  font-size: ${props => props.theme.fontSmall};\n  text-transform: uppercase;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.theme.dark};\n  position: relative;\n  padding-bottom: 1rem;\n  margin-bottom: 4rem;\n  &:after {\n    content: '';\n    height: 1px;\n    width: 50px;\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n    background: ${props => props.theme.ultraLight};\n  }\n`;\n\nconst SectionTitle = props => <Title>{props.children}</Title>;\n\nexport default SectionTitle;","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport Link from 'gatsby-link';\nimport styled from 'styled-components';\nimport kebabCase from 'lodash/kebabCase';\nimport Wrapper from '../components/Wrapper';\nimport Header from '../components/Header';\nimport SectionTitle from '../components/SectionTitle';\nimport { media } from '../utils/media';\n\nconst Content = styled.div`\n  grid-column: 2;\n  box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1);\n  border-radius: 1rem;\n  padding: 2rem 4rem;\n  background-color: ${props => props.theme.bg};\n  z-index: 9000;\n  margin-top: -3rem;\n  @media ${media.tablet} {\n    padding: 3rem 3rem;\n  }\n  @media ${media.phone} {\n    padding: 2rem 1.5rem;\n  }\n`;\n\nconst Title = styled.h3`\n  position: relative;\n  text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n  margin-bottom: 0.75rem;\n`;\n\nconst Category = props => {\n  const { group } = props.data.allMarkdownRemark;\n\n  return (\n    <Wrapper>\n      <Helmet title=\"Categories | Gatsby Starter - Minimal Blog\" />\n      <Header>\n        <Link to=\"/\">Gatsby Starter - Minimal Blog</Link>\n      </Header>\n      <Content>\n        <SectionTitle>Categories</SectionTitle>\n        {group.map(category => (\n          <Title>\n            <Link to={`/categories/${kebabCase(category.fieldValue)}`}>{category.fieldValue}</Link> ({\n              category.totalCount\n            })\n          </Title>\n        ))}\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Category;\n\n/* eslint no-undef: off */\nexport const postQuery = graphql`\n  query CategoriesPage {\n    allMarkdownRemark {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr minmax(320px, 1000px) 1fr;\n  padding: 0 1rem;\n`;\n\nconst Wrapper = props => <Grid>{props.children}</Grid>;\n\nexport default Wrapper;","const sizes = {\n    tablet: '1200px',\n    phone: '600px',\n  };\n  \n  export const media = {\n    tablet: `(max-width: ${sizes.tablet})`,\n    phone: `(max-width: ${sizes.phone})`,\n  };","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: 'green',\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n"],"sourceRoot":""}